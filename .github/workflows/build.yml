name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      # cloining the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      # login to my dockerhub account, the DOCKERHUB_USERNAME and DOCKERHUB_TOKEN are configured in github secrets
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # building the image with the tag as the github commit id
      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/aganeshkumar1222/hackathon-nodejs:${{ github.sha }} -t docker.io/aganeshkumar1222/hackathon-nodejs:latest .
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      # Running trivy scan on docker image and exit on critical and high issues, exit 1 was commented so that the pipeline can continue as there are critical and high vulnerabilities in the code
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/aganeshkumar1222/hackathon-nodejs:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
          #exit-code: '1'
          scan-type: image
      # you can view the scan results in security tab 
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
      # running sonar san and uploading reports to sonar cloud
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Push the image to Dockerhub
        run: |
          docker push docker.io/aganeshkumar1222/hackathon-nodejs:${{ github.sha }} 
          docker push docker.io/aganeshkumar1222/hackathon-nodejs:latest

